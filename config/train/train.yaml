defaults:
  - override hydra/hydra_logging: "none"
  - override hydra/job_logging: "custom"

hydra:
  run:
    dir: ./logs/train/${now:%Y-%m-%d}/${now:%H-%M-%S}

data_filepath: "data/processed/" # the / at the end is necessary
base_model_filepath: "models/base"

models:
        # # "svr": SVR(),
        # "ada": AdaBoostRegressor(),
        # "xgb": xgb.XGBRegressor(),

#  - name: "rf"
#    type: rf.pkl

#  - name: "dummy_median"
#    type: dummy_median.pkl

#  - name: "dummy_mean"
#    type: dummy_mean.pkl

#  - name: "ridge"
#    type: ridge.pkl

#  - name: "knn"
#    type: knn.pkl


#  - name: "gb"
#    type: gb.pkl

#  - name: "dt"
#    type: dt.pkl   

# Optimal rf
 - name: "gb 0.95 default"
   type: gb.pkl
   hyperparameters:
    loss: "quantile"
    alpha: 0.95

 - name: "gb 0.05 default"
   type: gb.pkl
   hyperparameters:
    loss: "quantile"
    alpha: 0.05

# #Optimal gb
#  - name: "gb opt"
#    type: gb.pkl
#    hyperparameters:
#     learning_rate: 0.05
#     max_depth: 12
#     min_samples_split: 15
#     n_estimators: 500
#     criterion: "friedman_mse"
#     loss: "quantile"
#     alpha: 0.50
#
#  - name: "gb"
#    type: gb.pkl

metric: "r2"

pipeline_step_names: ["ua_clean", "ma_clean", "col_dropper", "cat_handler", "nan_handler", "final_ct"]
preprocessor_name: "preprocessor"
predictor_name: "predictor"

features_builder:
  init_cleaner:
    low_kilometerage_cars_flag: True
    high_seats_cars_flag: True
    oldtimers_flag: True
  ua_cleaner:
  ma_cleaner:
    finalize_flag: True
  final_ct:
    numerical_encoder: "passthrough"
    nominal_encoder: "ordinal"
  verbose: 0